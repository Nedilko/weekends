name: Feature Deploy

on:
  pull_request:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      repo: ${{ steps.vars.outputs.repo }}
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - name: Use repository
        uses: actions/checkout@v2
      - name: Build variables
        id: vars
        run: |
          echo "::set-output name=repo::$GITHUB_REPOSITORY"
          echo "::set-output name=tag::$(git rev-parse --short "$GITHUB_SHA")"
      - name: Upload chart
        uses: actions/upload-artifact@v2
        with:
          name: repository
          path: |
            ${{ github.workspace }}/infra
            ${{ github.workspace }}/.dockerignore

  test:
    name: test
    # runs-on: self-hosted
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      # - name: use node v14  
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '14'
      #     cache: 'npm'
      #     cache-dependency-path: package-lock.json

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        run: npm ci

      - name: run tests
        run: npm test

      # - name: tag name
      #   run: |
      #     echo "{{ env.GITHUB_REF }}"
      #     echo "{{ env.GITHUB_SHA }}"
      #     echo "{{ env.GITHUB_REPOSITORY }}"
  
  coverage:
    name: coverage
    # runs-on: self-hosted
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      # - name: use node v14  
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '14'
      #     cache: 'npm'
      #     cache-dependency-path: package-lock.json

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        run: npm ci

      - name: run coverage
        run: npm run test:coverage

  lint:
    name: lint
    # runs-on: self-hosted
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      # - name: use node v14  
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '14'
      #     cache: 'npm'
      #     cache-dependency-path: package-lock.json

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        run: npm ci

      - name: run linting
        run: npm run lint
