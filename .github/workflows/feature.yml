name: Feature Deploy

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    # runs-on: self-hosted
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      # - name: use node v14  
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '14'
      #     cache: 'npm'
      #     cache-dependency-path: package-lock.json

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        run: npm ci

      - name: run tests
        run: npm test

      - name: build app
        run: npm run build:production

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/weekends:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/weekends:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/weekends:buildcache,mode=max
